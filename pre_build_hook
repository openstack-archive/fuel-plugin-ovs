#!/bin/bash

set -eux

BUILD_FOR=${BUILD_FOR:-ubuntu}
USE_DOCKER=${USE_DOCKER:-true}
DIR="$(dirname `readlink -f $0`)"

if [ `uname -m` = 'aarch64' ]; then
  USE_DOCKER=false
fi

function build_pkg {
  case $1 in
    ubuntu)
      DEB_DIR=${DIR}/deb-ovs-dpdk
      DEB_DIR_NSH=${DIR}/deb-ovs-nsh-dpdk

      rm -rf ${DIR}/repositories/ubuntu ${DEB_DIR} ${DEB_DIR_NSH}
      mkdir -p ${DIR}/repositories/ubuntu ${DEB_DIR} ${DEB_DIR_NSH}
      sudo chmod -R 777 ${DEB_DIR} ${DEB_DIR_NSH}

      cd ${DIR}/ovs_build
      if [ "${USE_DOCKER}" = true ]; then
        sudo docker build -t ovs_build .
        sudo docker run -v ${DEB_DIR}:/deb -t ovs_build /ovs_build/build-ovs-dpdk.sh
        sudo docker run -v ${DEB_DIR_NSH}:/deb -t ovs_build /ovs_build/build-ovs-nsh-dpdk.sh
      else
        rm -rf /tmp/ovs-build-{,nsh-}dpdk; mkdir -p /tmp/ovs-build-{,nsh-}dpdk
        BUILD_HOME=/tmp/ovs-build-dpdk BUILD_DEST=${DEB_DIR} ./build-ovs-dpdk.sh
        BUILD_HOME=/tmp/ovs-build-nsh-dpdk BUILD_DEST=${DEB_DIR_NSH} ./build-ovs-nsh-dpdk.sh
        rm -rf /tmp/ovs-build-{,nsh-}dpdk
      fi

      cd ${DEB_DIR}; tar czvf ../repositories/ubuntu/ovs-dpdk.tar.gz .;
      cd ..; rm -rf ${DEB_DIR}

      cd ${DEB_DIR_NSH}; tar czvf ../repositories/ubuntu/ovs-nsh-dpdk.tar.gz .;
      cd ..; rm -rf ${DEB_DIR_NSH}

      ;;
    *) echo "Not supported system"; exit 1;;
  esac
}

for system in $BUILD_FOR
do
  build_pkg $system
done
